apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: primary
  namespace: otel
spec:
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 5s
              static_configs:
                - targets: ['0.0.0.0:8888']
            - job_name: k8s
              kubernetes_sd_configs:
              - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                regex: "true"
                action: keep
              metric_relabel_configs:
              - source_labels: [__name__]
                regex: "(request_duration_seconds.*|response_duration_seconds.*)"
                action: keep
            - job_name: grafana
              scrape_interval: 1s
              static_configs:
                - targets: ['grafana.grafana.svc.cluster.local']
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s

    exporters:
      logging:
      otlphttp:
        endpoint: "http://mimir-nginx.mimir.svc:80/otlp"
      prometheusremotewrite:
        endpoint: "http://mimir-nginx.mimir.svc:80/api/v1/push"
        external_labels:
          label_name1: label_value1
          label_name2: label_value2

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [logging]
        metrics:
          receivers: [otlp,prometheus]
          processors: [batch]
          exporters: [otlphttp]
